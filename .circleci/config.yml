version: 2.1

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:23.5.0
    steps:
      - checkout

       - run:
          name: Install Java 17
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
            echo 'export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64' >> $BASH_ENV
            echo 'export PATH=$JAVA_HOME/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV

      # Restore npm (Yarn) cache
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
            - dependency-cache-

      # (Optional) Informative step to check node_modules (can be removed if not needed)
      - run:
          name: Restore npm cache
          command: |
            if [ -d node_modules ]; then
              echo "node_modules directory exists, restoring from cache."
            else
              echo "node_modules directory does not exist, skipping cache restore."
            fi

      # Install Node.js dependencies
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

      # Save npm cache
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.cache/yarn

      # Install Ruby and Bundler
      - run:
          name: Install Ruby and Bundler
          command: |
            sudo apt-get update
            sudo apt-get install -y ruby-full build-essential
            sudo gem install bundler

      # Restore Fastlane gems cache
      - restore_cache:
          keys:
            - fastlane-gems-{{ checksum "Gemfile.lock" }}
            - fastlane-gems-

      # Install Fastlane gems into vendor/bundle
      - run:
          name: Install Fastlane Gems
          command: |
            bundle install --path vendor/bundle

      # Save Fastlane gems cache
      - save_cache:
          key: fastlane-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Run Fastlane for Android
      - run:
          name: Run Fastlane betaAndroid
          command: bundle exec fastlane betaAndroid

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
